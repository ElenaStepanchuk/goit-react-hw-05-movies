{"version":3,"file":"static/js/284.45322891.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader.module.css?9d64","components/Loader.js","components/MoviesPage.js","helpers/FetchFilms.js","helpers/Scroll.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"Loader_LoaderBox__JKkW6\"};","import { BallTriangle } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.LoaderBox}>\n      <BallTriangle color=\"#00BFFF\" height={200} width={200} />\n    </div>\n  );\n};\nexport default Loader;\n","// import { useSearchParams, useLocation } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import { toast } from 'react-toastify';\n// import styled from 'styled-components';\n// import { SerchFilms } from '../helpers/FetchFilms';\n// import Loader from './Loader';\n// import Scrollers from '../helpers/Scroll';\n// import BtnMoreFilms from './BtnMoreFilms';\n// import FormMoviePage from './FormMoviePage';\n// import GalleryItemLinkComponent from './GalleryItemLinkComponent';\n// const Gallery = styled.ul`\n//   display: grid;\n//   justify-content: center;\n//   grid-template-columns: 340px 340px 340px 340px;\n//   padding: 0;\n//   margin: 20px auto;\n// `;\n// const GalleryItem = styled.li`\n//   list-style: none;\n//   padding: 20px;\n// `;\n// const MoviesPage = () => {\n//   const [query, setQuery] = useState('');\n//   const [films, setFilms] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [loading, setLoading] = useState(false);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const location = useLocation();\n//   const ChangeQuery = event => {\n//     setQuery(event.currentTarget.value.toLowerCase());\n//   };\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     setSearchParams({ query });\n//     if (query === '') {\n//       setSearchParams('');\n//       setFilms([]);\n//       return toast('Введите имя фото!', {\n//         position: 'top-center',\n//       });\n//     }\n//     setFilms([]);\n//     setQuery('');\n//     setPage(1);\n//   };\n//   const handleChangePage = () => {\n//     Scrollers();\n//     setLoading(true);\n//     setPage(prevPage => prevPage + 1);\n//   };\n//   useEffect(() => {\n//     const query = searchParams.get('query');\n//     if (location.search === '') return;\n//     const SerchFilm = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await SerchFilms(page, query);\n//         if (response.data.results.length === 0) {\n//           setSearchParams('');\n//           setFilms([]);\n//           toast(\n//             `Фильм с именем  ${query} не найден, введите новое имя фильма!`,\n//             {\n//               position: 'top-center',\n//             }\n//           );\n//         }\n//         setFilms(prevFilms => [...prevFilms, ...response.data.results]);\n//       } catch (error) {\n//         console.log(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     SerchFilm();\n//   }, [page, searchParams, setSearchParams, location.search]);\n//   return (\n//     <>\n//       <FormMoviePage\n//         handleSubmit={handleSubmit}\n//         ChangeQuery={ChangeQuery}\n//         query={query}\n//       />\n//       {loading && <Loader />}\n//       <Gallery>\n//         {films.length > 0 &&\n//           films.map(film => (\n//             <GalleryItem key={film.id} location={location}>\n//               <GalleryItemLinkComponent film={film} location={location} />\n//             </GalleryItem>\n//           ))}\n//       </Gallery>\n//       {films.length > 0 && (\n//         <BtnMoreFilms page={page} onClick={() => handleChangePage(page)} />\n//       )}\n//     </>\n//   );\n// };\n// export default MoviesPage;\n\n//Не разнесённая версия\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport { SerchFilms } from '../helpers/FetchFilms';\nimport noPoster from '../images/no-poster.jpg';\nimport Loader from './Loader';\nimport Scrollers from '../helpers/Scroll';\nconst Gallery = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 340px 340px 340px 340px;\n  padding: 0;\n  margin: 20px auto;\n`;\nconst GalleryItem = styled.li`\n  list-style: none;\n  padding: 20px;\n`;\nconst GalleryItemTittle = styled.h2`\n  background: rgb(0, 255, 255, 0.8);\n  padding: 15px 4px;\n  margin: 0;\n  box-shadow: 10px 5px 5px rgb(0, 255, 255, 0.5);\n  border-left: solid 1px rgb(0, 255, 255);\n  border-bottom: solid 1px rgb(0, 255, 255);\n  font-size: 18px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-weight: 800;\n  font-style: italic;\n  text-transform: uppercase;\n`;\nconst GalleryItemImg = styled.img`\n  display: block;\n  box-shadow: 10px 8px 5px rgb(0, 255, 255, 0.5);\n`;\nconst GalleryItemBtn = styled.button`\n  display: block;\n  margin: 20px auto;\n  background: rgb(0, 255, 255);\n  box-shadow: -1px -1px 9px 6px rgb(0, 255, 255, 0.5);\n  border: solid 1px rgb(0, 255, 255);\n  border-radius: 5px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-style: italic;\n  padding: 15px;\n  font-weight: 900;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\nconst GalleryItemLink = styled(Link)`\n  text-decoration: none;\n`;\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 40px;\n`;\nconst Input = styled.input`\n  padding: 10px;\n  font-weight: 800;\n  font-size: 18px;\n  color: rgb(2, 16, 141);\n  border-radius: 5px;\n`;\nconst SerchBtn = styled.button`\n  display: block;\n  background: rgb(0, 255, 255);\n  border: none;\n  border-radius: 5px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-style: italic;\n  padding: 15px;\n  font-weight: 900;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const ChangeQuery = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query });\n    if (query === '') {\n      setSearchParams('');\n      setFilms([]);\n      return toast('Введите имя фото!', {\n        position: 'top-center',\n      });\n    }\n    setFilms([]);\n    setQuery('');\n    setPage(1);\n  };\n  const handleChangePage = () => {\n    Scrollers();\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n  };\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (location.search === '') return;\n    const SerchFilm = async () => {\n      setLoading(true);\n      try {\n        const response = await SerchFilms(page, query);\n        if (response.data.results.length === 0) {\n          setSearchParams('');\n          setFilms([]);\n          toast(\n            `Фильм с именем  ${query} не найден, введите новое имя фильма!`,\n            {\n              position: 'top-center',\n            }\n          );\n        }\n        setFilms(prevFilms => [...prevFilms, ...response.data.results]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    SerchFilm();\n  }, [page, searchParams, setSearchParams, location.search]);\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={ChangeQuery}\n          type=\"text\"\n          value={query}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        ></Input>\n        <SerchBtn type=\"submit\">Serch</SerchBtn>\n      </Form>\n      {loading && <Loader />}\n      <Gallery>\n        {films.length > 0 &&\n          films.map(film => (\n            <GalleryItem key={film.id}>\n              <GalleryItemLink\n                to={`/movies/${film.id}`}\n                state={{ from: location }}\n              >\n                {film.poster_path ? (\n                  <GalleryItemImg\n                    src={`https://image.tmdb.org/t/p/w300${film.poster_path}`}\n                    alt={film.original_title}\n                  />\n                ) : (\n                  <GalleryItemImg\n                    src={noPoster}\n                    alt={film.original_title}\n                    width=\"300px\"\n                  />\n                )}\n                <GalleryItemTittle>\n                  {film.original_title || film.name}\n                </GalleryItemTittle>\n              </GalleryItemLink>\n            </GalleryItem>\n          ))}\n      </Gallery>\n      {films.length > 0 && (\n        <GalleryItemBtn\n          name=\"myScrollToElement\"\n          type=\"button\"\n          page={page}\n          onClick={() => handleChangePage(page)}\n        >\n          More films\n        </GalleryItemBtn>\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\nexport const TrendingFilms = async page => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&page=${page}`\n  );\n};\nexport const DetailsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const CastFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const ReviewsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const SerchFilms = async (page, query) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n};\n","import * as Scroll from 'react-scroll';\nconst Scrollers = () => {\n  const scroller = Scroll.scroller;\n  scroller.scrollTo('myScrollToElement', {\n    smooth: true,\n    offset: 1200,\n    duration: 1500,\n  });\n};\nexport default Scrollers;\n"],"names":["className","css","color","height","width","Gallery","styled","GalleryItem","GalleryItemTittle","GalleryItemImg","GalleryItemBtn","GalleryItemLink","Link","Form","Input","SerchBtn","useState","query","setQuery","films","setFilms","page","setPage","loading","setLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","search","SerchFilm","SerchFilms","response","data","results","length","toast","position","prevFilms","console","log","onSubmit","event","preventDefault","onChange","currentTarget","value","toLowerCase","type","autoComplete","autoFocus","placeholder","map","film","to","id","state","from","poster_path","src","alt","original_title","noPoster","name","onClick","Scrollers","prevPage","API_KEY","TrendingFilms","axios","DetailsFilm","movieId","CastFilm","ReviewsFilm","Scroll","scrollTo","smooth","offset","duration"],"sourceRoot":""}