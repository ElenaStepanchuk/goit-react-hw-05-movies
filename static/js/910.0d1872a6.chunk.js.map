{"version":3,"file":"static/js/910.0d1872a6.chunk.js","mappings":"4QAMMA,EAASC,EAAAA,GAAAA,GAAH,sHAMNC,EAAUD,EAAAA,GAAAA,IAAH,yGAMPE,EAASF,EAAAA,GAAAA,EAAH,kHAmDZ,UA7Ca,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,2FACfF,GAAW,GADI,mBAGUG,EAAAA,EAAAA,IAAST,GAHnB,OAGPU,EAHO,OAIbN,EAASM,EAASC,KAAKC,MAJV,gDAMbC,QAAQC,IAAR,MANa,yBAQbR,GAAW,GARE,4EAAH,qDAWdE,MACC,CAACR,KAEF,UAACF,EAAD,WACGO,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAMY,OAAS,EACdZ,EAAMa,KAAI,SAAAJ,GAAI,OACZ,2BACE,SAAChB,EAAD,UAASgB,EAAKK,OACbL,EAAKM,cACJ,gBACEC,IAAG,yCAAoCP,EAAKM,cAC5CE,IAAKR,EAAKS,iBAGZ,gBAAKF,IAAKG,EAAUF,IAAKR,EAAKS,cAAeE,MAAM,YAR9CX,EAAKY,aAahB,yBACE,SAACzB,EAAD,8D,kEC7DZ,EAA4B,0B,SCQ5B,EAPe,WACb,OACE,gBAAK0B,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAcC,MAAM,UAAUC,OAAQ,IAAKL,MAAO,U,0MCJlDM,EAAU,mCACHC,EAAa,mCAAG,WAAMC,GAAN,iFACdC,IAAAA,IAAA,iEAC+CH,EAD/C,iBAC+DE,IAFjD,mFAAH,sDAKbE,EAAW,mCAAG,WAAMjC,GAAN,iFACZgC,IAAAA,IAAA,6CAC2BhC,EAD3B,oBAC8C6B,EAD9C,oBADY,mFAAH,sDAKXpB,EAAQ,mCAAG,WAAMT,GAAN,iFACTgC,IAAAA,IAAA,6CAC2BhC,EAD3B,4BACsD6B,EADtD,oBADS,mFAAH,sDAKRK,EAAW,mCAAG,WAAMlC,GAAN,iFACZgC,IAAAA,IAAA,6CAC2BhC,EAD3B,4BACsD6B,EADtD,oBADY,mFAAH,sDAKXM,EAAU,mCAAG,WAAOJ,EAAMK,GAAb,iFACXJ,IAAAA,IAAA,4DAC0CH,EAD1C,gCACyEE,EADzE,sCAC2GK,IAFhG,mFAAH,yD","sources":["components/Cast.js","webpack://react-homework-template/./src/components/Loader.module.css?9d64","components/Loader.js","helpers/FetchFilms.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { CastFilm } from '../helpers/FetchFilms';\nimport { useEffect, useState } from 'react';\nimport Loader from './Loader';\nimport styled from 'styled-components';\nimport noPoster from '../images/no-poster.jpg';\nconst Tittle = styled.h2`\n  text-align: center;\n  font-weight: 800;\n  font-size: 20px;\n  text-transform: uppercase;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 0;\n`;\nconst NoCast = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  text-transform: none;\n  text-align: justify;\n`;\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const CastInfo = async () => {\n      setLoading(true);\n      try {\n        const response = await CastFilm(movieId);\n        setCasts(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    CastInfo();\n  }, [movieId]);\n  return (\n    <Wrapper>\n      {loading && <Loader />}\n      <ul>\n        {casts.length > 0 ? (\n          casts.map(cast => (\n            <li key={cast.cast_id}>\n              <Tittle>{cast.name}</Tittle>\n              {cast.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${cast.profile_path}`}\n                  alt={cast.original_name}\n                />\n              ) : (\n                <img src={noPoster} alt={cast.original_name} width=\"300px\" />\n              )}\n            </li>\n          ))\n        ) : (\n          <li>\n            <NoCast>We don`t have any cast for this movie.</NoCast>\n          </li>\n        )}\n      </ul>\n    </Wrapper>\n  );\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"Loader_LoaderBox__JKkW6\"};","import { BallTriangle } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.LoaderBox}>\n      <BallTriangle color=\"#00BFFF\" height={200} width={200} />\n    </div>\n  );\n};\nexport default Loader;\n","import axios from 'axios';\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\nexport const TrendingFilms = async page => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&page=${page}`\n  );\n};\nexport const DetailsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const CastFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const ReviewsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const SerchFilms = async (page, query) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n};\n"],"names":["Tittle","styled","Wrapper","NoCast","movieId","useParams","useState","casts","setCasts","loading","setLoading","useEffect","CastInfo","CastFilm","response","data","cast","console","log","length","map","name","profile_path","src","alt","original_name","noPoster","width","cast_id","className","css","color","height","API_KEY","TrendingFilms","page","axios","DetailsFilm","ReviewsFilm","SerchFilms","query"],"sourceRoot":""}