{"version":3,"file":"static/js/213.a23dad3e.chunk.js","mappings":"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","sources":["components/BtnMoreFilms.js","components/GalleryImg.js","components/GalleryItemLinkComponent.js","components/GalleryItemComponent.js","components/GalleryListComponent.js","webpack://react-homework-template/./src/components/Loader.module.css?9d64","components/Loader.js","components/FormMoviePage.js","components/MoviesPage.js","helpers/FetchFilms.js","helpers/Scroll.js"],"sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst GalleryItemBtn = styled.button`\n  display: block;\n  margin: 20px auto;\n  background: rgb(0, 255, 255);\n  box-shadow: -1px -1px 9px 6px rgb(0, 255, 255, 0.5);\n  border: solid 1px rgb(0, 255, 255);\n  border-radius: 5px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-style: italic;\n  padding: 15px;\n  font-weight: 900;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\nconst BtnMoreFilms = ({ page, onClick }) => {\n  return (\n    <GalleryItemBtn\n      name=\"myScrollToElement\"\n      type=\"button\"\n      page={page}\n      onClick={onClick}\n    >\n      More films\n    </GalleryItemBtn>\n  );\n};\nexport default BtnMoreFilms;\nBtnMoreFilms.protoTypes = {\n  page: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst GalleryItemImg = styled.img`\n  display: block;\n  box-shadow: 10px 8px 5px rgb(0, 255, 255, 0.5);\n`;\nconst GalleryImg = ({ film }) => {\n  return (\n    <GalleryItemImg\n      src={`https://image.tmdb.org/t/p/w300${film.poster_path}`}\n      alt={film.original_title}\n    />\n  );\n};\nexport default GalleryImg;\nGalleryImg.protoTypes = {\n  film: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n  }),\n};\n","import GalleryImg from './GalleryImg';\nimport noPoster from '../images/no-poster.jpg';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst GalleryItemTittle = styled.h2`\n  background: rgb(0, 255, 255, 0.8);\n  padding: 15px 4px;\n  margin: 0;\n  box-shadow: 10px 5px 5px rgb(0, 255, 255, 0.5);\n  border-left: solid 1px rgb(0, 255, 255);\n  border-bottom: solid 1px rgb(0, 255, 255);\n  font-size: 18px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-weight: 800;\n  font-style: italic;\n  text-transform: uppercase;\n`;\nconst GalleryItemLink = styled(Link)`\n  text-decoration: none;\n`;\nconst GalleryItemLinkComponent = ({ film, location }) => {\n  return (\n    <GalleryItemLink to={`/movies/${film.id}`} state={{ from: location }}>\n      {film.poster_path ? (\n        <GalleryImg film={film} />\n      ) : (\n        <img src={noPoster} alt={film.original_title} width=\"300px\" />\n      )}\n      <GalleryItemTittle>{film.original_title || film.name}</GalleryItemTittle>\n    </GalleryItemLink>\n  );\n};\nexport default GalleryItemLinkComponent;\nGalleryItemLinkComponent.protoTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  location: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport GalleryItemLinkComponent from './GalleryItemLinkComponent';\nconst GalleryItem = styled.li`\n  list-style: none;\n  padding: 20px;\n`;\nconst GalleryItemComponent = ({ film, location }) => {\n  return (\n    <GalleryItem key={film.id}>\n      <GalleryItemLinkComponent film={film} location={location} />\n    </GalleryItem>\n  );\n};\nexport default GalleryItemComponent;\nGalleryItemComponent.protoTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }),\n  location: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport GalleryItemComponent from './GalleryItemComponent';\nconst Gallery = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 340px 340px 340px 340px;\n  margin-top: -20px;\n  margin-left: -40px;\n`;\nconst GalleryListComponent = ({ films, location }) => {\n  return (\n    <Gallery>\n      {films &&\n        films.map(film => (\n          <GalleryItemComponent key={film.id} film={film} location={location} />\n        ))}\n    </Gallery>\n  );\n};\nexport default GalleryListComponent;\nGalleryListComponent.protoTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      film: PropTypes.string.isRequired,\n    })\n  ),\n  location: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"Loader_LoaderBox__JKkW6\"};","import { BallTriangle } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.LoaderBox}>\n      <BallTriangle color=\"#00BFFF\" height={200} width={200} />\n    </div>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 40px;\n`;\nconst Input = styled.input`\n  padding: 10px;\n  font-weight: 800;\n  font-size: 18px;\n  color: rgb(2, 16, 141);\n  border-radius: 5px;\n`;\nconst SerchBtn = styled.button`\n  display: block;\n  background: rgb(0, 255, 255);\n  border: none;\n  border-radius: 5px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-style: italic;\n  padding: 15px;\n  font-weight: 900;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\nconst FormMoviePage = ({ handleSubmit, ChangeQuery, query }) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        onChange={ChangeQuery}\n        type=\"text\"\n        value={query}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n      ></Input>\n      <SerchBtn type=\"submit\">Serch</SerchBtn>\n    </Form>\n  );\n};\nexport default FormMoviePage;\nFormMoviePage.protoTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  ChangeQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { SerchFilms } from '../helpers/FetchFilms';\nimport Loader from './Loader';\nimport Scrollers from '../helpers/Scroll';\nimport BtnMoreFilms from './BtnMoreFilms';\nimport FormMoviePage from './FormMoviePage';\nimport GalleryListComponent from './GalleryListComponent';\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const ChangeQuery = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query });\n    if (query === '') {\n      setSearchParams('');\n      setFilms([]);\n      return toast('Введите имя фото!', {\n        position: 'top-center',\n      });\n    }\n    setFilms([]);\n    setQuery('');\n    setPage(1);\n  };\n  const handleChangePage = () => {\n    Scrollers();\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n  };\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (location.search === '') return;\n    const SerchFilm = async () => {\n      setLoading(true);\n      try {\n        const response = await SerchFilms(page, query);\n        if (response.data.results.length === 0) {\n          setSearchParams('');\n          setFilms([]);\n          toast(\n            `Фильм с именем  ${query} не найден, введите новое имя фильма!`,\n            {\n              position: 'top-center',\n            }\n          );\n        }\n        setFilms(prevFilms => [...prevFilms, ...response.data.results]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    SerchFilm();\n  }, [page, searchParams, setSearchParams, location.search]);\n  return (\n    <>\n      <FormMoviePage\n        handleSubmit={handleSubmit}\n        ChangeQuery={ChangeQuery}\n        query={query}\n      />\n      {loading && <Loader />}\n      <GalleryListComponent films={films} location={location} />\n      {films.length > 0 && (\n        <BtnMoreFilms page={page} onClick={() => handleChangePage(page)} />\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\nMoviesPage.protoTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  ChangeQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  films: PropTypes.array.isRequired,\n  location: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\nexport const TrendingFilms = async page => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&page=${page}`\n  );\n};\nexport const DetailsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const CastFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const ReviewsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const SerchFilms = async (page, query) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n};\n","import * as Scroll from 'react-scroll';\nconst Scrollers = () => {\n  const scroller = Scroll.scroller;\n  scroller.scrollTo('myScrollToElement', {\n    smooth: true,\n    offset: 1200,\n    duration: 1500,\n  });\n};\nexport default Scrollers;\n"],"names":["GalleryItemBtn","styled","BtnMoreFilms","page","onClick","name","type","protoTypes","PropTypes","GalleryItemImg","GalleryImg","film","src","poster_path","alt","original_title","GalleryItemTittle","GalleryItemLink","Link","GalleryItemLinkComponent","location","to","id","state","from","noPoster","width","GalleryItem","GalleryItemComponent","Gallery","GalleryListComponent","films","map","className","css","color","height","Form","Input","SerchBtn","FormMoviePage","handleSubmit","ChangeQuery","query","onSubmit","onChange","value","autoComplete","autoFocus","placeholder","MoviesPage","useState","setQuery","setFilms","setPage","loading","setLoading","useSearchParams","searchParams","setSearchParams","useLocation","useEffect","get","search","SerchFilm","SerchFilms","response","data","results","length","toast","position","prevFilms","console","log","event","preventDefault","currentTarget","toLowerCase","Loader","Scrollers","prevPage","handleChangePage","API_KEY","TrendingFilms","axios","DetailsFilm","movieId","CastFilm","ReviewsFilm","Scroll","scrollTo","smooth","offset","duration"],"sourceRoot":""}