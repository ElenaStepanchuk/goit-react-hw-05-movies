{"version":3,"file":"static/js/511.11d5d7a7.chunk.js","mappings":"uVACMA,EAAiBC,EAAAA,GAAAA,OAAH,0XA2BpB,EAZqB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACE,SAACH,EAAD,CACEI,KAAK,oBACLC,KAAK,SACLH,KAAMA,EACNC,QAASA,EAJX,yBC+CEG,EAASL,EAAAA,GAAAA,GAAH,2KASNM,EAAUN,EAAAA,GAAAA,GAAH,sKAOPO,EAAcP,EAAAA,GAAAA,GAAH,+DAIXQ,EAAoBR,EAAAA,GAAAA,GAAH,+XAcjBS,EAAiBT,EAAAA,GAAAA,IAAH,8FAmBdU,GAAkBV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,kDA4DrB,EAzDiB,WACf,OAA0BY,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOX,EAAP,KAAac,EAAb,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,2FACZJ,GAAW,GADC,mBAGaK,EAAAA,EAAAA,IAAcrB,GAH3B,OAGJsB,EAHI,OAIVT,GAAS,SAAAU,GAAS,wBAAQA,IAAR,OAAsBD,EAASE,KAAKC,aAJ5C,gDAMVC,QAAQC,IAAR,MANU,yBAQVX,GAAW,GARD,4EAAH,qDAWXI,MACC,CAACpB,KAEF,gCACGe,IAAW,SAACa,EAAA,EAAD,KACZ,SAACxB,EAAD,oCACA,SAACC,EAAD,UACGO,GACCA,EAAMiB,KAAI,SAAAC,GAAI,OACZ,SAACxB,EAAD,WACE,UAACG,EAAD,CACEsB,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMjB,GAFjB,UAIGa,EAAKK,aACJ,SAAC3B,EAAD,CACE4B,IAAG,yCAAoCN,EAAKK,aAC5CE,IAAKP,EAAKQ,kBAGZ,gBAAKF,IAAKG,EAAUF,IAAKP,EAAKQ,eAAgBE,MAAM,WAEtD,SAACjC,EAAD,UACGuB,EAAKQ,gBAAkBR,EAAK5B,WAdjB4B,EAAKE,SAoB5BpB,EAAM6B,OAAS,IACd,SAAC,EAAD,CAAczC,KAAMA,EAAMC,QAAS,kBA9CvCe,GAAW,GACXF,GAAQ,SAAA4B,GAAQ,OAAIA,EAAW,UAC/BC,EAAAA,EAAAA,a,kEChIJ,EAA4B,0B,SCQ5B,EAPe,WACb,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAcC,MAAM,UAAUC,OAAQ,IAAKP,MAAO,U,0MCJlDQ,EAAU,mCACH3B,EAAa,mCAAG,WAAMrB,GAAN,iFACdiD,IAAAA,IAAA,iEAC+CD,EAD/C,iBAC+DhD,IAFjD,mFAAH,sDAKbkD,EAAW,mCAAG,WAAMC,GAAN,iFACZF,IAAAA,IAAA,6CAC2BE,EAD3B,oBAC8CH,EAD9C,oBADY,mFAAH,sDAKXI,EAAQ,mCAAG,WAAMD,GAAN,iFACTF,IAAAA,IAAA,6CAC2BE,EAD3B,4BACsDH,EADtD,oBADS,mFAAH,sDAKRK,EAAW,mCAAG,WAAMF,GAAN,iFACZF,IAAAA,IAAA,6CAC2BE,EAD3B,4BACsDH,EADtD,oBADY,mFAAH,sDAKXM,EAAU,mCAAG,WAAOtD,EAAMuD,GAAb,iFACXN,IAAAA,IAAA,4DAC0CD,EAD1C,gCACyEhD,EADzE,sCAC2GuD,IAFhG,mFAAH,yD,mCCbvB,IARkB,WACCC,EAAAA,GACRC,SAAS,oBAAqB,CACrCC,QAAQ,EACRC,OAAQ,KACRC,SAAU,S","sources":["components/BtnMoreFilms.js","components/HomePage.js","webpack://react-homework-template/./src/components/Loader.module.css?9d64","components/Loader.js","helpers/FetchFilms.js","helpers/Scroll.js"],"sourcesContent":["import styled from 'styled-components';\nconst GalleryItemBtn = styled.button`\n  display: block;\n  margin: 20px auto;\n  background: rgb(0, 255, 255);\n  box-shadow: -1px -1px 9px 6px rgb(0, 255, 255, 0.5);\n  border: solid 1px rgb(0, 255, 255);\n  border-radius: 5px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-style: italic;\n  padding: 15px;\n  font-weight: 900;\n  font-size: 18px;\n  text-transform: uppercase;\n`;\nconst BtnMoreFilms = ({ page, onClick }) => {\n  return (\n    <GalleryItemBtn\n      name=\"myScrollToElement\"\n      type=\"button\"\n      page={page}\n      onClick={onClick}\n    >\n      More films\n    </GalleryItemBtn>\n  );\n};\nexport default BtnMoreFilms;\n","// import { useLocation } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import styled from 'styled-components';\n// import { TrendingFilms } from '../helpers/FetchFilms';\n// import Loader from './Loader';\n// import Scrollers from '../helpers/Scroll';\n// import BtnMoreFilms from './BtnMoreFilms';\n// import GalleryListTrending from './GalleryListTrending';\n// const Tittle = styled.h1`\n//   padding: 0;\n//   margin-top: 20px;\n//   font-size: 35px;\n//   color: white;\n//   text-align: center;\n//   font-weight: 800;\n//   text-transform: uppercase;\n// `;\n// const HomePage = () => {\n//   const [films, setFilms] = useState([]);\n//   const [page, setPage] = useState(1);\n//   const [loading, setLoading] = useState(false);\n//   const location = useLocation();\n//   const handleChangePage = () => {\n//     setLoading(true);\n//     setPage(prevPage => prevPage + 1);\n//     Scrollers();\n//   };\n//   useEffect(() => {\n//     const Films = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await TrendingFilms(page);\n//         setFilms(prevFilms => [...prevFilms, ...response.data.results]);\n//       } catch (error) {\n//         console.log(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     Films();\n//   }, [page]);\n//   return (\n//     <>\n//       {loading && <Loader />}\n//       <Tittle>Trending films today</Tittle>\n//       <GalleryListTrending films={films} location={location} />\n//       {films.length > 0 && (\n//         <BtnMoreFilms page={page} onClick={() => handleChangePage(page)} />\n//       )}\n//     </>\n//   );\n// };\n// export default HomePage;\n\n//Не разнесённая версия\nimport { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { TrendingFilms } from '../helpers/FetchFilms';\nimport Loader from './Loader';\nimport noPoster from '../images/no-poster.jpg';\nimport Scrollers from '../helpers/Scroll';\nimport BtnMoreFilms from './BtnMoreFilms';\n// import GalleryListTrendFilms from './GalleryListTrendFilms';\n// import GalleryItemTrending from './GalleryImgTrending';\nconst Tittle = styled.h1`\n  padding: 0;\n  margin-top: 20px;\n  font-size: 35px;\n  color: white;\n  text-align: center;\n  font-weight: 800;\n  text-transform: uppercase;\n`;\nconst Gallery = styled.ul`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 340px 340px 340px 340px;\n  margin-top: -20px;\n  margin-left: -40px;\n`;\nconst GalleryItem = styled.li`\n  list-style: none;\n  padding: 20px;\n`;\nconst GalleryItemTittle = styled.h2`\n  background: rgb(0, 255, 255, 0.8);\n  padding: 15px 4px;\n  margin: 0;\n  box-shadow: 10px 5px 5px rgb(0, 255, 255, 0.5);\n  border-left: solid 1px rgb(0, 255, 255);\n  border-bottom: solid 1px rgb(0, 255, 255);\n  font-size: 18px;\n  color: rgb(2, 16, 141);\n  text-align: center;\n  font-weight: 800;\n  font-style: italic;\n  text-transform: uppercase;\n`;\nconst GalleryItemImg = styled.img`\n  display: block;\n  box-shadow: 10px 8px 5px rgb(0, 255, 255, 0.5);\n`;\n// const GalleryItemBtn = styled.button`\n//   display: block;\n//   margin: 20px auto;\n//   background: rgb(0, 255, 255);\n//   box-shadow: -1px -1px 9px 6px rgb(0, 255, 255, 0.5);\n//   border: solid 1px rgb(0, 255, 255);\n//   border-radius: 5px;\n//   color: rgb(2, 16, 141);\n//   text-align: center;\n//   font-style: italic;\n//   padding: 15px;\n//   font-weight: 900;\n//   font-size: 18px;\n//   text-transform: uppercase;\n// `;\nconst GalleryItemLink = styled(Link)`\n  text-decoration: none;\n`;\nconst HomePage = () => {\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const handleChangePage = () => {\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n    Scrollers();\n  };\n  useEffect(() => {\n    const Films = async () => {\n      setLoading(true);\n      try {\n        const response = await TrendingFilms(page);\n        setFilms(prevFilms => [...prevFilms, ...response.data.results]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    Films();\n  }, [page]);\n  return (\n    <>\n      {loading && <Loader />}\n      <Tittle>Trending films today</Tittle>\n      <Gallery>\n        {films &&\n          films.map(film => (\n            <GalleryItem key={film.id}>\n              <GalleryItemLink\n                to={`/movies/${film.id}`}\n                state={{ from: location }}\n              >\n                {film.poster_path ? (\n                  <GalleryItemImg\n                    src={`https://image.tmdb.org/t/p/w300${film.poster_path}`}\n                    alt={film.original_title}\n                  />\n                ) : (\n                  <img src={noPoster} alt={film.original_title} width=\"300px\" />\n                )}\n                <GalleryItemTittle>\n                  {film.original_title || film.name}\n                </GalleryItemTittle>\n              </GalleryItemLink>\n            </GalleryItem>\n          ))}\n      </Gallery>\n      {films.length > 0 && (\n        <BtnMoreFilms page={page} onClick={() => handleChangePage(page)} />\n      )}\n    </>\n  );\n};\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"LoaderBox\":\"Loader_LoaderBox__JKkW6\"};","import { BallTriangle } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.LoaderBox}>\n      <BallTriangle color=\"#00BFFF\" height={200} width={200} />\n    </div>\n  );\n};\nexport default Loader;\n","import axios from 'axios';\nconst API_KEY = '19261be26ee50f4d2c275bad83bad0b4';\nexport const TrendingFilms = async page => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&page=${page}`\n  );\n};\nexport const DetailsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const CastFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const ReviewsFilm = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\nexport const SerchFilms = async (page, query) => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`\n  );\n};\n","import * as Scroll from 'react-scroll';\nconst Scrollers = () => {\n  const scroller = Scroll.scroller;\n  scroller.scrollTo('myScrollToElement', {\n    smooth: true,\n    offset: 1200,\n    duration: 1500,\n  });\n};\nexport default Scrollers;\n"],"names":["GalleryItemBtn","styled","page","onClick","name","type","Tittle","Gallery","GalleryItem","GalleryItemTittle","GalleryItemImg","GalleryItemLink","Link","useState","films","setFilms","setPage","loading","setLoading","location","useLocation","useEffect","Films","TrendingFilms","response","prevFilms","data","results","console","log","Loader","map","film","to","id","state","from","poster_path","src","alt","original_title","noPoster","width","length","prevPage","Scrollers","className","css","color","height","API_KEY","axios","DetailsFilm","movieId","CastFilm","ReviewsFilm","SerchFilms","query","Scroll","scrollTo","smooth","offset","duration"],"sourceRoot":""}